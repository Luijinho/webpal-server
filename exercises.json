[
    {
        "exerciseID": "048ace6b-1495-4b9e-9ed7-7777b0f52dc9",
        "data": {
            "sitename": "048ace6b-1495-4b9e-9ed7-7777b0f52dc9",
            "data": [
                {
                    "filename": "index.html",
                    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"styles.css\">\n    <title>Document</title>\n    <script type='text/javascript' src='main.js'></script>\n</head>\n<body>\n    <div id=\"inputs\">\n        <input type=\"number\" id=\"number1\" placeholder=\"Number 1\">\n        <input type=\"number\" id=\"number2\" placeholder=\"Number 2\">\n    </div>\n    <div id=\"buttons\">\n        <button id=\"sum\">Sum</button>\n        <button id=\"reset\">Reset</button>\n    </div>\n    <div id=\"result\">\n        <p id=\"resultText\">0</p>\n    </div>\n</body>\n</html>"
                },
                {
                    "filename": "style.css",
                    "code": "#resultText {\n    color: red\n}"
                },
                {
                    "filename": "main.js",
                    "code": "var number1Input = document.getElementById(\"number1\");\nvar number2Input = document.getElementById(\"number2\");\nvar resultText = document.getElementById(\"resultText\");\n\n// Get the sum button and attach a click event listener\nvar sumButton = document.getElementById(\"sum\");\nsumButton.addEventListener(\"click\", function() {\n    // Get the values of the input fields\n    var number1 = parseFloat(number1Input.value);\n    var number2 = parseFloat(number2Input.value);\n\n    // Perform the sum operation\n    var sum = number1 + number2;\n\n    // Update the result element with the sum\n    resultText.textContent = sum;\n});\n\n// Get the reset button and attach a click event listener\nvar resetButton = document.getElementById(\"reset\");\nresetButton.addEventListener(\"click\", function() {\n    // Clear the input fields\n    number1Input.value = \"\";\n    number2Input.value = \"\";\n\n    // Reset the result element to 0\n    resultText.textContent = \"0\";\n});"
                }
            ]
        },
        "testData": "const assert = chai.assert;\n\ndescribe('Summing Numbers', function() {\n  const number1Input = document.getElementById('number1');\n  const number2Input = document.getElementById('number2');\n  const resultText = document.getElementById('resultText');\n  const sumButton = document.getElementById('sum');\n  const resetButton = document.getElementById('reset');\n\n  it('should calculate the correct sum when the sum button is clicked', function() {\n    number1Input.value = '5';\n    number2Input.value = '3';\n    sumButton.click();\n    assert.equal(resultText.textContent, '8');\n  });\n\n  it('should reset the input fields and result to 0 when the reset button is clicked', function() {\n    number1Input.value = '5';\n    number2Input.value = '3';\n    sumButton.click();\n    resetButton.click();\n    assert.equal(number1Input.value, '');\n    assert.equal(number2Input.value, '');\n    assert.equal(resultText.textContent, '0');\n  });\n\n  it('should have red color for the result text', function() {\n    assert.equal(getComputedStyle(resultText).color, 'rgb(255, 0, 0)');\n  });\n});\n",
        "assignment": "Sum 2 Numbers",
        "description": "Create a webpage that accepts two numerical inputs from the user. There is a 'Sum' button that, when clicked, displays the sum of these two numbers. Additionally, there's a 'Reset' button that clears the input fields and resets the sum to zero upon clicking. "
    },
    {
        "exerciseID": "3f07766e-c364-467a-bb6a-e878c3b82d01",
        "data": {
            "sitename": "3f07766e-c364-467a-bb6a-e878c3b82d01",
            "data": [
                {
                    "filename": "index.html",
                    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Countdown</title>\n    <script type='text/javascript' src='main.js'></script>\n</head>\n<body>\n    <div>\n        <h1>Countdown</h1>\n        <div>\n            <input type=\"number\" id=\"secondsInput\" placeholder=\"Enter seconds\">\n            <button id=\"startButton\">Start</button>\n            <button id=\"pauseButton\">Pause</button>\n            <button id=\"resetButton\">Reset</button>\n        </div>\n        <div id=\"countdownTimer\">0</div>\n    </div>\n</body>\n</html>\n"
                },
                {
                    "filename": "style.css",
                    "code": "div {}"
                },
                {
                    "filename": "main.js",
                    "code": "const secondsInput = document.getElementById('secondsInput');\nconst startButton = document.getElementById('startButton');\nconst pauseButton = document.getElementById('pauseButton');\nconst resetButton = document.getElementById('resetButton');\nconst countdownTimer = document.getElementById('countdownTimer');\n\nlet countdownInterval;\nlet secondsRemaining = 0;\n\nfunction startCountdown() {\n  const seconds = parseInt(secondsInput.value);\n  if (!isNaN(seconds) && seconds > 0 && !countdownInterval) {\n    secondsRemaining = seconds;\n    countdownTimer.textContent = secondsRemaining;\n    countdownInterval = setInterval(() => {\n      secondsRemaining--;\n      countdownTimer.textContent = secondsRemaining;\n      if (secondsRemaining === 0) {\n        clearInterval(countdownInterval);\n        countdownInterval = null;\n      }\n    }, 1000);\n  }\n}\n\nfunction pauseCountdown() {\n  clearInterval(countdownInterval);\n  countdownInterval = null;\n}\n\nfunction resetCountdown() {\n  clearInterval(countdownInterval);\n  countdownInterval = null;\n  secondsRemaining = 0;\n  countdownTimer.textContent = secondsRemaining;\n  secondsInput.value = '';\n}\n\nstartButton.addEventListener('click', startCountdown);\npauseButton.addEventListener('click', pauseCountdown);\nresetButton.addEventListener('click', resetCountdown);\n"
                }
            ]
        },
        "testData": "const assert = chai.assert;\n\ndescribe('Countdown', function() {\n  const secondsInput = document.getElementById('secondsInput');\n  const startButton = document.getElementById('startButton');\n  const pauseButton = document.getElementById('pauseButton');\n  const resetButton = document.getElementById('resetButton');\n  const countdownTimer = document.getElementById('countdownTimer');\n\n  it('should have the correct initial values', function() {\n    assert.equal(secondsInput.value, '', 'Seconds input should be empty initially');\n    assert.equal(countdownTimer.textContent, '0', 'Countdown timer should be initialized with 0');\n  });\n\n  it('should start the countdown', function() {\n    secondsInput.value = '5';\n    startButton.click();\n\n    assert.equal(countdownTimer.textContent, '5', 'Countdown timer should start at the specified value');\n  });\n\n  it('should pause the countdown', function() {\n    secondsInput.value = '5';\n    startButton.click();\n    pauseButton.click();\n\n    assert.equal(countdownTimer.textContent, '5', 'Countdown timer should pause at the current value');\n  });\n\n  it('should reset the countdown', function() {\n    secondsInput.value = '5';\n    startButton.click();\n    resetButton.click();\n\n    assert.equal(secondsInput.value, '', 'Seconds input should be cleared after reset');\n    assert.equal(countdownTimer.textContent, '0', 'Countdown timer should be reset to 0');\n  });\n\n  it('should count down to 0', function(done) {\n    secondsInput.value = '1';\n    startButton.click();\n\n    setTimeout(function() {\n      assert.equal(countdownTimer.textContent, '0', 'Countdown timer should reach 0');\n      done();\n    }, 1500);\n  });\n});\n",
        "assignment": "Countdown Timer",
        "description": "Create a webpage that allows users to set a countdown timer. Users should be able to enter a duration in seconds and start the countdown by clicking the 'Start' button. The countdown should decrement every second and display the remaining time. Implement a 'Pause' button that pauses the countdown, and a 'Reset' button that stops the countdown and resets it to zero. The countdown timer should stop automatically when it reaches zero."
    },
    {
        "exerciseID": "5cf12720-4dd8-4010-a68f-15c746caf268",
        "data": {
            "sitename": "5cf12720-4dd8-4010-a68f-15c746caf268",
            "data": [
                {
                    "filename": "index.html",
                    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Temperature Conversion</title>\n    <script type='text/javascript' src='main.js'></script>\n</head>\n<body>\n    <div id=\"celsiusDiv\">\n        <label for=\"celsius\">Celsius:</label>\n        <input type=\"number\" id=\"celsius\" placeholder=\"Enter temperature in Celsius\">\n    </div>\n    <div id=\"fahrenheitDiv\">\n        <label for=\"fahrenheit\">Fahrenheit:</label>\n        <input type=\"number\" id=\"fahrenheit\" placeholder=\"Enter temperature in Fahrenheit\">\n    </div>\n</body>\n</html>\n"
                },
                {
                    "filename": "style.css",
                    "code": "div {}"
                },
                {
                    "filename": "main.js",
                    "code": "const celsiusInput = document.getElementById('celsius');\nconst fahrenheitInput = document.getElementById('fahrenheit');\n\nfunction celsiusToFahrenheit(celsius) {\n  return (celsius * 9 / 5) + 32;\n}\n\nfunction fahrenheitToCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\ncelsiusInput.addEventListener('input', function() {\n  const celsius = parseFloat(celsiusInput.value);\n  if (!isNaN(celsius)) {\n    const fahrenheit = celsiusToFahrenheit(celsius);\n    fahrenheitInput.value = fahrenheit.toFixed(2);\n  } else {\n    fahrenheitInput.value = '';\n  }\n});\n\nfahrenheitInput.addEventListener('input', function() {\n  const fahrenheit = parseFloat(fahrenheitInput.value);\n  if (!isNaN(fahrenheit)) {\n    const celsius = fahrenheitToCelsius(fahrenheit);\n    celsiusInput.value = celsius.toFixed(2);\n  } else {\n    celsiusInput.value = '';\n  }\n});\n"
                }
            ]
        },
        "testData": "const assert = chai.assert;\n\ndescribe('Temperature Conversion', function() {\n  const celsiusInput = document.getElementById('celsius');\n  const fahrenheitInput = document.getElementById('fahrenheit');\n\n  it('should convert Celsius to Fahrenheit correctly', function() {\n    celsiusInput.value = '25';\n    celsiusInput.dispatchEvent(new Event('input'));\n\n    assert.equal(fahrenheitInput.value, '77.00');\n  });\n\n  it('should convert Fahrenheit to Celsius correctly', function() {\n    fahrenheitInput.value = '98.6';\n    fahrenheitInput.dispatchEvent(new Event('input'));\n\n    assert.equal(celsiusInput.value, '37.00');\n  });\n\n  it('should clear Fahrenheit input when Celsius input is not a number', function() {\n    celsiusInput.value = 'ABC';\n    celsiusInput.dispatchEvent(new Event('input'));\n\n    assert.equal(fahrenheitInput.value, '');\n  });\n\n  it('should clear Celsius input when Fahrenheit input is not a number', function() {\n    fahrenheitInput.value = 'XYZ';\n    fahrenheitInput.dispatchEvent(new Event('input'));\n\n    assert.equal(celsiusInput.value, '');\n  });\n});\n",
        "assignment": "Temperature Conversion",
        "description": "Create a webpage that allows users to convert temperatures between Celsius and Fahrenheit. Users should be able to enter a temperature in either Celsius or Fahrenheit, and the application should automatically display the equivalent temperature in the other unit. When a user enters a non-numeric input, the corresponding field in the other unit should be cleared. The conversions should correctly apply the formulas for transforming Celsius to Fahrenheit and vice versa."
    },
    {
        "exerciseID": "b2ac2027-74cc-4ea3-81e3-a5e782f2531d",
        "data": {
            "sitename": "b2ac2027-74cc-4ea3-81e3-a5e782f2531d",
            "data": [
                {
                    "filename": "index.html",
                    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"styles.css\">\n    <title>Counter</title>\n    <script type='text/javascript' src='main.js'></script>\n</head>\n<body>\n        <p id=\"count\">0</p>\n        <div id=\"buttons\">\n            <button id=\"increment\">+</button>\n            <button id=\"decrement\">-</button>\n            <button id=\"reset\">Reset</button>\n        </div>\n</body>\n</html>\n"
                },
                {
                    "filename": "style.css",
                    "code": "div {}"
                },
                {
                    "filename": "main.js",
                    "code": "const countElement = document.getElementById('count');\nconst incrementButton = document.getElementById('increment');\nconst decrementButton = document.getElementById('decrement');\nconst resetButton = document.getElementById('reset');\n\nlet count = 0;\n\ncountElement.textContent = count;\n\nincrementButton.addEventListener('click', function() {\n  count++;\n  countElement.textContent = count;\n});\n\ndecrementButton.addEventListener('click', function() {\n  count--;\n  countElement.textContent = count;\n});\n\nresetButton.addEventListener('click', function() {\n  count = 0;\n  countElement.textContent = count;\n});\n"
                }
            ]
        },
        "testData": "const assert = chai.assert;\n\ndescribe('Counter', function() {\n  const countElement = document.getElementById('count');\n  const incrementButton = document.getElementById('increment');\n  const decrementButton = document.getElementById('decrement');\n  const resetButton = document.getElementById('reset');\n\n  it('should increment the count when the increment button is clicked', function() {\n    incrementButton.click();\n    assert.equal(countElement.textContent, '1');\n  });\n  \n  it('should reset the count to zero when the reset button is clicked', function() {\n    incrementButton.click();\n    resetButton.click();\n    assert.equal(countElement.textContent, '0');\n  });\n\n  it('should have the correct count after a sequence of operations', function() {\n    incrementButton.click();\n    decrementButton.click();\n    incrementButton.click();\n    incrementButton.click();\n    decrementButton.click();\n    incrementButton.click();\n    assert.equal(countElement.textContent, '2');\n  });\n});\n",
        "assignment": "Counter",
        "description": "Create a webpage that displays a counter to the user. The counter starts at zero and is incremented or decremented by one when the '+' or '-' button is clicked respectively. Additionally, there's a 'Reset' button that resets the counter back to zero upon clicking."
    },
    {
        "exerciseID": "d5f97e33-0592-44e7-a434-7736023c1a41",
        "data": {
            "sitename": "d5f97e33-0592-44e7-a434-7736023c1a41",
            "data": [
                {
                    "filename": "index.html",
                    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"styles.css\">\n    <title>To-Do List</title>\n    <script type='text/javascript' src='main.js'></script>\n</head>\n<body>\n    <div>\n        <h1>To-Do List</h1>\n        <div>\n            <input type=\"text\" id=\"taskInput\" placeholder=\"Enter a task\">\n            <button id=\"addButton\">Add</button>\n        </div>\n        <ul id=\"taskList\"></ul>\n        <button id=\"resetButton\">Reset</button>\n    </div>\n</body>\n</html>\n"
                },
                {
                    "filename": "styles.css",
                    "code": "#addButton,\n#resetButton {\n  cursor: pointer;\n}\n"
                },
                {
                    "filename": "main.js",
                    "code": "const taskInput = document.getElementById('taskInput');\nconst addButton = document.getElementById('addButton');\nconst taskList = document.getElementById('taskList');\nconst resetButton = document.getElementById('resetButton');\n\nfunction addTask() {\n  const task = taskInput.value.trim();\n  if (task !== '') {\n    const taskItem = document.createElement('li');\n    taskItem.innerHTML = `${task} <button class=\"delButton\">Delete</button>`;\n    taskList.appendChild(taskItem);\n    taskInput.value = '';\n  }\n}\n\naddButton.addEventListener('click', addTask);\n\ntaskList.addEventListener('click', function(event) {\n  if (event.target.classList.contains('delButton')) {\n    const taskItem = event.target.parentElement;\n    taskList.removeChild(taskItem);\n  }\n});\n\nresetButton.addEventListener('click', function() {\n  taskList.innerHTML = '';\n});\n"
                }
            ]
        },
        "testData": "const assert = chai.assert;\n\ndescribe('To-Do List', function() {\n  const taskInput = document.getElementById('taskInput');\n  const addButton = document.getElementById('addButton');\n  const taskList = document.getElementById('taskList');\n  const resetButton = document.getElementById('resetButton');\n\n  afterEach(function() {\n    resetButton.click();\n  });\n\n  it('should have the correct initial values', function() {\n    assert.equal(taskInput.value, '', 'Task input should be empty');\n    assert.equal(taskList.children.length, 0, 'Task list should be empty');\n  });\n\n  it('should add a task to the list when clicking the add button', function() {\n    taskInput.value = 'Task 1';\n    addButton.click();\n    assert.equal(taskList.children.length, 1, 'Task should be added to the list');\n  });\n\n  it('should remove a task from the list when clicking the delete button', function() {\n    taskInput.value = 'Task 1';\n    addButton.click();\n    const deleteButton = taskList.querySelector('.delButton');\n    deleteButton.click();\n    assert.equal(taskList.children.length, 0, 'Task should be removed from the list');\n  });\n\n  it('should clear the task list when clicking the reset button', function() {\n    resetButton.click();\n    assert.equal(taskList.children.length, 0, 'Task list should be empty');\n  });\n\n  it('should have cursor: pointer for the add and reset buttons', function() {\n    const addButtonStyle = getComputedStyle(addButton);\n    const resetButtonStyle = getComputedStyle(resetButton);\n\n    assert.equal(addButtonStyle.cursor, 'pointer', 'Cursor should be pointer when hovering the Add button');\n    assert.equal(resetButtonStyle.cursor, 'pointer', 'Cursor should be pointer when hovering the Reset button');\n  });\n});\n",
        "assignment": "To-Do List",
        "description": "Develop a webpage that enables users to manage a simple to-do list. Users should be able to input tasks in a text field, and clicking the 'Add' button adds these tasks to a list. Each item in the list should include a 'Delete' button that removes the item from the list when clicked. There should also be a 'Reset' button that clears all tasks from the list."
    }
]